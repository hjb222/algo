{
    "hints": {
        "getGlobalInc": {
            "read_only": true
        }
    },
    "source": {
        "approval": "I3ByYWdtYSB2ZXJzaW9uIDgKaW50Y2Jsb2NrIDAgMQpieXRlY2Jsb2NrIDB4Njc2YzZmNjI2MTZjNWY2OTZlNjM3MjY1NmQ2NTZlNzQgMHgxNTFmN2M3NSAweDZjNmY2MzYxNmM1ZjYzNmY3NTZlNzQ2NTcyCnR4biBOdW1BcHBBcmdzCmludGNfMCAvLyAwCj09CmJueiBtYWluX2wxMgp0eG5hIEFwcGxpY2F0aW9uQXJncyAwCnB1c2hieXRlcyAweDU3NGEyZTI4IC8vICJnZXRHbG9iYWxJbmMoKXVpbnQ2NCIKPT0KYm56IG1haW5fbDExCnR4bmEgQXBwbGljYXRpb25BcmdzIDAKcHVzaGJ5dGVzIDB4ZWZhZWRiNWMgLy8gInNldEdsb2JhbEluYyh1aW50NjQpdm9pZCIKPT0KYm56IG1haW5fbDEwCnR4bmEgQXBwbGljYXRpb25BcmdzIDAKcHVzaGJ5dGVzIDB4ZjE2YmJmM2QgLy8gImluY3JlbWVudEdsb2JhbCgpdm9pZCIKPT0KYm56IG1haW5fbDkKdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMApwdXNoYnl0ZXMgMHhhMTJhYWYxMiAvLyAiaXNfb3B0ZWRfaW4oKXVpbnQ2NCIKPT0KYm56IG1haW5fbDgKdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMApwdXNoYnl0ZXMgMHhlZTQ1YzQxYiAvLyAibG9jYWxfaW5pdCgpdWludDY0Igo9PQpibnogbWFpbl9sNwplcnIKbWFpbl9sNzoKdHhuIE9uQ29tcGxldGlvbgppbnRjXzAgLy8gTm9PcAo9PQp0eG4gQXBwbGljYXRpb25JRAppbnRjXzAgLy8gMAohPQomJgphc3NlcnQKY2FsbHN1YiBsb2NhbGluaXRfNgpzdG9yZSAyCmJ5dGVjXzEgLy8gMHgxNTFmN2M3NQpsb2FkIDIKaXRvYgpjb25jYXQKbG9nCmludGNfMSAvLyAxCnJldHVybgptYWluX2w4Ogp0eG4gT25Db21wbGV0aW9uCmludGNfMCAvLyBOb09wCj09CnR4biBBcHBsaWNhdGlvbklECmludGNfMCAvLyAwCiE9CiYmCmFzc2VydApjYWxsc3ViIGlzb3B0ZWRpbl81CnN0b3JlIDEKYnl0ZWNfMSAvLyAweDE1MWY3Yzc1CmxvYWQgMQppdG9iCmNvbmNhdApsb2cKaW50Y18xIC8vIDEKcmV0dXJuCm1haW5fbDk6CnR4biBPbkNvbXBsZXRpb24KaW50Y18wIC8vIE5vT3AKPT0KdHhuIEFwcGxpY2F0aW9uSUQKaW50Y18wIC8vIDAKIT0KJiYKYXNzZXJ0CmNhbGxzdWIgaW5jcmVtZW50R2xvYmFsXzQKaW50Y18xIC8vIDEKcmV0dXJuCm1haW5fbDEwOgp0eG4gT25Db21wbGV0aW9uCmludGNfMCAvLyBOb09wCj09CnR4biBBcHBsaWNhdGlvbklECmludGNfMCAvLyAwCiE9CiYmCmFzc2VydAp0eG5hIEFwcGxpY2F0aW9uQXJncyAxCmJ0b2kKY2FsbHN1YiBzZXRHbG9iYWxJbmNfMwppbnRjXzEgLy8gMQpyZXR1cm4KbWFpbl9sMTE6CnR4biBPbkNvbXBsZXRpb24KaW50Y18wIC8vIE5vT3AKPT0KdHhuIEFwcGxpY2F0aW9uSUQKaW50Y18wIC8vIDAKIT0KJiYKYXNzZXJ0CmNhbGxzdWIgZ2V0R2xvYmFsSW5jXzIKc3RvcmUgMApieXRlY18xIC8vIDB4MTUxZjdjNzUKbG9hZCAwCml0b2IKY29uY2F0CmxvZwppbnRjXzEgLy8gMQpyZXR1cm4KbWFpbl9sMTI6CnR4biBPbkNvbXBsZXRpb24KaW50Y18wIC8vIE5vT3AKPT0KYm56IG1haW5fbDE2CnR4biBPbkNvbXBsZXRpb24KaW50Y18xIC8vIE9wdEluCj09CmJueiBtYWluX2wxNQplcnIKbWFpbl9sMTU6CnR4biBBcHBsaWNhdGlvbklECmludGNfMCAvLyAwCiE9CmFzc2VydApjYWxsc3ViIG9wdGluXzEKaW50Y18xIC8vIDEKcmV0dXJuCm1haW5fbDE2Ogp0eG4gQXBwbGljYXRpb25JRAppbnRjXzAgLy8gMAo9PQphc3NlcnQKY2FsbHN1YiBjcmVhdGVfMAppbnRjXzEgLy8gMQpyZXR1cm4KCi8vIGNyZWF0ZQpjcmVhdGVfMDoKcHJvdG8gMCAwCmJ5dGVjXzAgLy8gImdsb2JhbF9pbmNyZW1lbnQiCmludGNfMCAvLyAwCmFwcF9nbG9iYWxfcHV0CnJldHN1YgoKLy8gb3B0X2luCm9wdGluXzE6CnByb3RvIDAgMApyZXRzdWIKCi8vIGdldEdsb2JhbEluYwpnZXRHbG9iYWxJbmNfMjoKcHJvdG8gMCAxCmludGNfMCAvLyAwCmJ5dGVjXzAgLy8gImdsb2JhbF9pbmNyZW1lbnQiCmFwcF9nbG9iYWxfZ2V0CmZyYW1lX2J1cnkgMApyZXRzdWIKCi8vIHNldEdsb2JhbEluYwpzZXRHbG9iYWxJbmNfMzoKcHJvdG8gMSAwCmJ5dGVjXzAgLy8gImdsb2JhbF9pbmNyZW1lbnQiCmZyYW1lX2RpZyAtMQphcHBfZ2xvYmFsX3B1dApyZXRzdWIKCi8vIGluY3JlbWVudEdsb2JhbAppbmNyZW1lbnRHbG9iYWxfNDoKcHJvdG8gMCAwCmJ5dGVjXzAgLy8gImdsb2JhbF9pbmNyZW1lbnQiCmJ5dGVjXzAgLy8gImdsb2JhbF9pbmNyZW1lbnQiCmFwcF9nbG9iYWxfZ2V0CmludGNfMSAvLyAxCisKYXBwX2dsb2JhbF9wdXQKcmV0c3ViCgovLyBpc19vcHRlZF9pbgppc29wdGVkaW5fNToKcHJvdG8gMCAxCmludGNfMCAvLyAwCnR4biBTZW5kZXIKdHhuIEFwcGxpY2F0aW9uSUQKYXBwX29wdGVkX2luCmZyYW1lX2J1cnkgMApyZXRzdWIKCi8vIGxvY2FsX2luaXQKbG9jYWxpbml0XzY6CnByb3RvIDAgMQppbnRjXzAgLy8gMAp0eG4gU2VuZGVyCmJ5dGVjXzIgLy8gImxvY2FsX2NvdW50ZXIiCmludGNfMSAvLyAxCmFwcF9sb2NhbF9wdXQKdHhuIFNlbmRlcgpieXRlY18yIC8vICJsb2NhbF9jb3VudGVyIgphcHBfbG9jYWxfZ2V0CmZyYW1lX2J1cnkgMApyZXRzdWI=",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDgKcHVzaGludCAwIC8vIDAKcmV0dXJu"
    },
    "schema": {
        "local": {
            "declared": {},
            "reserved": {}
        },
        "global": {
            "declared": {
                "global_increment": {
                    "type": "uint64",
                    "key": "global_increment",
                    "descr": ""
                }
            },
            "reserved": {}
        }
    },
    "contract": {
        "name": "Demo",
        "methods": [
            {
                "name": "getGlobalInc",
                "args": [],
                "returns": {
                    "type": "uint64"
                }
            },
            {
                "name": "setGlobalInc",
                "args": [
                    {
                        "type": "uint64",
                        "name": "val"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "incrementGlobal",
                "args": [],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "is_opted_in",
                "args": [],
                "returns": {
                    "type": "uint64"
                }
            },
            {
                "name": "local_init",
                "args": [],
                "returns": {
                    "type": "uint64"
                }
            }
        ],
        "networks": {}
    }
}